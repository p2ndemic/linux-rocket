# =============================================
# Ref: https://wiki.archlinux.org/title/Improving_performance
# Ref: https://wiki.archlinux.org/title/Improving_performance#irqbalance
# =============================================

# =============================================
# irqbalance
# =============================================

Насчет демона irqbalance:
В вики Arch Linux указано что служба/демон irqbalance в некоторых случаях может снизить производительность. У меня нет сомнения не верить им. irqbalance действительно конфликтует планировщиками ядра (bore-scheduler и др.) и расширяемыми планировщиками sched-ext (scx_lavd и др.). Лучше полностью отлючить и удалить irqbalance для избежания конфликтов.

sudo systemctl disable --now irqbalance
sudo pacman -Rns irqbalance

# =============================================


# =============================================
#    Ananicy-cpp
# =============================================
Еще непонятна процедура взамодействия CPU Schedulers и sched-ext с Ananicy-cpp. К примеру GenAI Deepseek советует любо полностью отключить Ananicy-cpp или либо использовать этот инструмент с со стандартными правилами.
Возможно все же лучше отключить до тщательного тестирования.

sudo systemctl status ananicy-cpp.service
sudo systemctl disable --now ananicy-cpp.service
sudo pacman -Rns ananicy-cpp
sudo pacman -Rns cachyos-ananicy-rules

# =============================================


# =============================================
# Настрйока XFS
# =============================================
# Ref: https://wiki.archlinux.org/title/XFS
# =============================================

# Обязательно включить службу TRIM:




# XFS имеет специальную переменную sysctl для установки интервала обратной записи со значением по умолчанию 3000.
# Хотя большие значения могут повысить производительность, они также увеличивают возможность потери данных при отключении электропитания. Хотя это неособо критично при работе за ноутбуком, поэтому можно включать.
sudo nano /etc/sysctl.d/20-xfs-sync-interval.conf
fs.xfs.xfssyncd_centisecs = 10000

# =============================================

# =============================================
# Проверить какие переменные окружения задает приложение
# =============================================
# На примере Stem и gamescope: В параметрах запуска Steam пропишите агрументы Gamescope:
# gamescope --rt --immediate-flips -w 1680 -h 1050 -W 2560 -H 1600 -f -r 120 --force-grab-cursor -- %command%
# Запустите игру
# =============================================

# Найдите PID игры:
# =============================================
# Есть несколько способов проверить PID приложения/игры:

# 1. Через ps:
ps -eo pid,comm,cmd | grep -iE 'gamescope'

# 2. Через pstree -p:
pstree -p или pstree -p | grep -iE 'gamescope'

# 3. Через TUI btop:
# Откройте файл конфигурации ~/.config/btop/btop.conf и настройте следующие параметры:
proc_tree = True (отображать дерево процессов)
proc_left = True (оторажать колонку процессов слева. Для удобства)

# Далее запустите btop и нажмите кнопку 'p' для переключения пресетов. В панели процессов найдите gamescope-wl и gamescopereaper
# В данном случае мы получает 2 PID: 8410 gamescope-wl и 8435 gamescopereaper
# =============================================

# Используйте команду 'strings /proc/***/environ' для просмотра переменных окружения которая задает программа при запуске.
# Вместо *** нам необходимо указать PID процесса
# Для удобства можно отсортировать значения, оставить только уникальные (опционально), и вывести вывод stdout в текстовый файл на рабочем столе
# =============================================
sudo strings /proc/8410/environ | sort | uniq > ~/Desktop/gamescope-wl_envs.txt
sudo strings /proc/8435/environ | sort | uniq > ~/Desktop/gamescopereaper_envs.txt
# =============================================
# В этом выводе примечально то, что gamescope почему то не задает переменную ENABLE_GAMESCOPE_WSI=1, хотя она думаю необходима. Нужно уточнить у разработчиков.
# =============================================
# Еще одна полезная переменная это - 'ENABLE_VK_LAYER_VALVE_steam_overlay_1' которая задается gamescope'ом. Возможно ее отлючение утранит проблему называемую - GAMESCOPE LAG BOMB, при которой игра запущенная через gamescope начинает сильна фризить спустя определенный промежуток времени (~20-25+ min.)
# =============================================
# STEAM_CLIENT_CONFIG_FILE=/home/admin/.local/share/Steam/steam.cfg - переменная указывает на конфиг файл steam. Можно его подредактировать для удобства
# =============================================


# Полезные переменные окружения:
# =============================================
# ENABLE_GAMESCOPE_WSI=1
# =============================================

# =============================================
# Эти переменные окружения Proton устанавливает по умолчанию. Как проверить указано выше
# vk_khr_present_wait=true
# vk_xwayland_wait_ready=false
# =============================================

# =============================================
# См. коммент от GloriousEggroll касательно этой переменной:
# Ref: https://github.com/ValveSoftware/Proton/issues/1209
# PULSE_LATENCY_MSEC=60
# =============================================

# =============================================
# mesa_glthread=true
# MESA_VK_ENABLE_SUBMIT_THREAD=true
# =============================================
